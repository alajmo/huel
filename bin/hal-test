#!/usr/bin/env node

const defaultConfig = require('../config/default.json');
const program = require('commander');
const tasks = require('../src/tasks/tasks.js');

program
  .option(
    '-p, --pjv',
    `check package.json. [boolean] [default: ${defaultConfig.packageJsonCheck}]`
  )
  .option(
    '-s, --size [path]',
    `size limit test. [string] [default: ${defaultConfig.sizeLimitCheck}]`
  )
  .option(
    '-d, --depcheck',
    `dependency check. [boolean] [default: ${defaultConfig.dependencyCheck}]`
  )
  .option(
    '-e, --entry <entry>',
    `entry for project. [string] [required] [default: ${defaultConfig.entry}]`
  )
  .option(
    '-o, --output <output>',
    `output for project. [string] [required] [default: ${defaultConfig.output}]`
  )

  .on('--help', () => {
    console.log(`

  Examples:

    One time run test
    $ hal test -s src/

    Watch files and run test on file change
    $ hal test -w -s src/
  `);
  })
  .parse(process.argv);

function getTestOptions(options) {
  return Object.freeze({
    pjv: options.pjv || defaultConfig.packageJsonCheck,
    size: options.size || defaultConfig.sizeLimitCheck,
    depcheck: options.depcheck || defaultConfig.dependencyCheck,
    entry: options.entry || defaultConfig.entry,
    output: options.output || defaultConfig.output
  });
}

main();
function main() {
  const opt = getTestOptions(program);
  tasks.test(opt);
}
